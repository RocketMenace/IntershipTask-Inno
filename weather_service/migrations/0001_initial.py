# Generated by Django 5.1.1 on 2025-06-09 02:46

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ForecastRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateField(auto_now=True)),
                ("updated_at", models.DateField(auto_now_add=True)),
                ("city", models.CharField(max_length=255, verbose_name="city")),
                ("date", models.DateField(verbose_name="date")),
                ("min_temperature", models.FloatField()),
                ("max_temperature", models.FloatField()),
            ],
            options={
                "verbose_name": "forecast_record",
                "verbose_name_plural": "forecast_records",
                "db_table": "forecast_records",
                "db_table_comment": "ForecastRecords",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["city"], name="forecast_re_city_372f37_idx")
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("max_temperature__gte", models.F("min_temperature"))
                        ),
                        name="max_temp_gte_min_temp",
                        violation_error_message="Maximum temperature must be greater than or equal to minimum temperature",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            ("date__gte", datetime.date(2025, 6, 9)),
                            ("date__lte", datetime.date(2025, 6, 19)),
                        ),
                        name="date_between_current_date_and_ten_days_after",
                        violation_error_message="Date can't be lower than current date.",
                    ),
                ],
            },
        ),
    ]
