version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: weather_db
    env_file:
      - "./.env"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-weatheruser} -d ${POSTGRES_DB:-weatherdb}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - weather_network

  web:
    build: .
    container_name: weather_app
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - "./.env"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - weather_network

volumes:
  postgres_data:

networks:
  weather_network:
    driver: bridge